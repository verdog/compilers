/* Generated By:JavaCC: Do not edit this line. NolifeParserConstants.java */
package parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface NolifeParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int O_MOD = 6;
  /** RegularExpression Id. */
  int O_AND = 7;
  /** RegularExpression Id. */
  int O_ARRAY = 8;
  /** RegularExpression Id. */
  int O_BEGIN = 9;
  /** RegularExpression Id. */
  int O_CHARACTER = 10;
  /** RegularExpression Id. */
  int O_DO = 11;
  /** RegularExpression Id. */
  int O_ELSE = 12;
  /** RegularExpression Id. */
  int O_END = 13;
  /** RegularExpression Id. */
  int O_FLOAT = 14;
  /** RegularExpression Id. */
  int O_FUNCTION = 15;
  /** RegularExpression Id. */
  int O_IF = 16;
  /** RegularExpression Id. */
  int O_INTEGER = 17;
  /** RegularExpression Id. */
  int O_NOT = 18;
  /** RegularExpression Id. */
  int O_OF = 19;
  /** RegularExpression Id. */
  int O_OR = 20;
  /** RegularExpression Id. */
  int O_PROCEDURE = 21;
  /** RegularExpression Id. */
  int O_PROGRAM = 22;
  /** RegularExpression Id. */
  int O_READ = 23;
  /** RegularExpression Id. */
  int O_RETURN = 24;
  /** RegularExpression Id. */
  int O_THEN = 25;
  /** RegularExpression Id. */
  int O_VAR = 26;
  /** RegularExpression Id. */
  int O_WHILE = 27;
  /** RegularExpression Id. */
  int O_WRITE = 28;
  /** RegularExpression Id. */
  int O_CASE = 29;
  /** RegularExpression Id. */
  int O_LE = 30;
  /** RegularExpression Id. */
  int O_LT = 31;
  /** RegularExpression Id. */
  int O_GE = 32;
  /** RegularExpression Id. */
  int O_GT = 33;
  /** RegularExpression Id. */
  int O_EQ = 34;
  /** RegularExpression Id. */
  int O_NE = 35;
  /** RegularExpression Id. */
  int O_ASSIGN = 36;
  /** RegularExpression Id. */
  int O_COLON = 37;
  /** RegularExpression Id. */
  int O_SEMICOLON = 38;
  /** RegularExpression Id. */
  int O_COMMA = 39;
  /** RegularExpression Id. */
  int O_LBRACKET = 40;
  /** RegularExpression Id. */
  int O_RBRACKET = 41;
  /** RegularExpression Id. */
  int O_LPAREN = 42;
  /** RegularExpression Id. */
  int O_RPAREN = 43;
  /** RegularExpression Id. */
  int O_DOT = 44;
  /** RegularExpression Id. */
  int O_PLUS = 45;
  /** RegularExpression Id. */
  int O_MINUS = 46;
  /** RegularExpression Id. */
  int O_TIMES = 47;
  /** RegularExpression Id. */
  int O_CHAR = 48;
  /** RegularExpression Id. */
  int O_STRING = 49;
  /** RegularExpression Id. */
  int DIGIT = 50;
  /** RegularExpression Id. */
  int ALPHA = 51;
  /** RegularExpression Id. */
  int O_IDENTIFIER = 52;
  /** RegularExpression Id. */
  int EXPONENT = 53;
  /** RegularExpression Id. */
  int O_FLOATCON = 54;
  /** RegularExpression Id. */
  int O_INT = 55;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "<token of kind 5>",
    "\"MOD\"",
    "\"AND\"",
    "\"ARRAY\"",
    "\"BEGIN\"",
    "\"CHARACTER\"",
    "\"DO\"",
    "\"ELSE\"",
    "\"END\"",
    "\"FLOAT\"",
    "\"FUNCTION\"",
    "\"IF\"",
    "\"INTEGER\"",
    "\"NOT\"",
    "\"OF\"",
    "\"OR\"",
    "\"PROCEDURE\"",
    "\"PROGRAM\"",
    "\"READ\"",
    "\"RETURN\"",
    "\"THEN\"",
    "\"VAR\"",
    "\"WHILE\"",
    "\"WRITE\"",
    "\"CASE\"",
    "\"<=\"",
    "\"<\"",
    "\">=\"",
    "\">\"",
    "\"=\"",
    "\"<>\"",
    "\":=\"",
    "\":\"",
    "\";\"",
    "\",\"",
    "\"[\"",
    "\"]\"",
    "\"(\"",
    "\")\"",
    "\".\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "<O_CHAR>",
    "<O_STRING>",
    "<DIGIT>",
    "<ALPHA>",
    "<O_IDENTIFIER>",
    "<EXPONENT>",
    "<O_FLOATCON>",
    "<O_INT>",
  };

}
