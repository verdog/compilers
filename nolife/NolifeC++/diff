diff --git a/nolife/NolifeC++/parser/.d_astarraynode b/nolife/NolifeC++/parser/.d_astarraynode
new file mode 100644
index 0000000..38ade3b
--- /dev/null
+++ b/nolife/NolifeC++/parser/.d_astarraynode
@@ -0,0 +1,4 @@
+libparser-g.a(astarraynode.o): astarraynode.cpp astarraynode.hpp \
+ asttypenode.hpp astnode.hpp astsymnode.hpp astprocnode.hpp \
+ astprognode.hpp astdeclnode.hpp astcompoundstmtnode.hpp aststmtnode.hpp \
+ astparamnode.hpp
diff --git a/nolife/NolifeC++/parser/.d_astbinarynode b/nolife/NolifeC++/parser/.d_astbinarynode
index fe100f1..d74f0b3 100644
--- a/nolife/NolifeC++/parser/.d_astbinarynode
+++ b/nolife/NolifeC++/parser/.d_astbinarynode
@@ -1,2 +1,2 @@
 libparser-g.a(astbinarynode.o): astbinarynode.cpp astbinarynode.hpp \
- astnode.hpp
+ aststmtnode.hpp astnode.hpp
diff --git a/nolife/NolifeC++/parser/.d_astcallnode b/nolife/NolifeC++/parser/.d_astcallnode
index 0c6771b..840f696 100644
--- a/nolife/NolifeC++/parser/.d_astcallnode
+++ b/nolife/NolifeC++/parser/.d_astcallnode
@@ -1,2 +1,2 @@
-libparser-g.a(astcallnode.o): astcallnode.cpp astcallnode.hpp astnode.hpp \
- astsymnode.hpp
+libparser-g.a(astcallnode.o): astcallnode.cpp astcallnode.hpp \
+ aststmtnode.hpp astnode.hpp astsymnode.hpp
diff --git a/nolife/NolifeC++/parser/.d_astreturnnode b/nolife/NolifeC++/parser/.d_astreturnnode
index 060a2c3..bd900fa 100644
--- a/nolife/NolifeC++/parser/.d_astreturnnode
+++ b/nolife/NolifeC++/parser/.d_astreturnnode
@@ -1,3 +1,3 @@
 libparser-g.a(astreturnnode.o): astreturnnode.cpp astreturnnode.hpp \
- astnode.hpp astexpressionnode.hpp astcallnode.hpp aststmtnode.hpp \
+ aststmtnode.hpp astnode.hpp astexpressionnode.hpp astcallnode.hpp \
  astsymnode.hpp astvariablenode.hpp astconstantnode.hpp
diff --git a/nolife/NolifeC++/parser/.d_asttypenode b/nolife/NolifeC++/parser/.d_asttypenode
index 7fe66b5..983f67d 100644
--- a/nolife/NolifeC++/parser/.d_asttypenode
+++ b/nolife/NolifeC++/parser/.d_asttypenode
@@ -1 +1,3 @@
-libparser-g.a(asttypenode.o): asttypenode.cpp asttypenode.hpp astnode.hpp
+libparser-g.a(asttypenode.o): asttypenode.cpp asttypenode.hpp astnode.hpp \
+ astsymnode.hpp astprocnode.hpp astprognode.hpp astdeclnode.hpp \
+ astcompoundstmtnode.hpp aststmtnode.hpp astparamnode.hpp
diff --git a/nolife/NolifeC++/parser/.d_nolife_parser b/nolife/NolifeC++/parser/.d_nolife_parser
index a63e967..870a6f2 100644
--- a/nolife/NolifeC++/parser/.d_nolife_parser
+++ b/nolife/NolifeC++/parser/.d_nolife_parser
@@ -1,6 +1,6 @@
 libparser-g.a(nolife_parser.o): nolife_parser.cpp astnode.hpp \
  astprognode.hpp astsymnode.hpp astdeclnode.hpp asttypenode.hpp \
- astcompoundstmtnode.hpp aststmtnode.hpp astparamnode.hpp \
+ astprocnode.hpp astparamnode.hpp astcompoundstmtnode.hpp aststmtnode.hpp \
  astassignnode.hpp astbinarynode.hpp astvariablenode.hpp \
  astexpressionnode.hpp astcallnode.hpp astconstantnode.hpp \
- astprocnode.hpp astarrayaccessnode.hpp astreturnnode.hpp
+ astarrayaccessnode.hpp astreturnnode.hpp
diff --git a/nolife/NolifeC++/parser/astarraynode.cpp b/nolife/NolifeC++/parser/astarraynode.cpp
new file mode 100644
index 0000000..30f0f64
--- /dev/null
+++ b/nolife/NolifeC++/parser/astarraynode.cpp
@@ -0,0 +1,9 @@
+#include "astarraynode.hpp"
+
+namespace ast {
+
+    Array::Array() {
+        mKind = "array";
+    }
+
+}
\ No newline at end of file
diff --git a/nolife/NolifeC++/parser/astarraynode.hpp b/nolife/NolifeC++/parser/astarraynode.hpp
new file mode 100644
index 0000000..8c7d48d
--- /dev/null
+++ b/nolife/NolifeC++/parser/astarraynode.hpp
@@ -0,0 +1,12 @@
+#pragma once
+
+#include "asttypenode.hpp"
+
+namespace ast {
+
+    class Array : public Type {
+        public:
+            Array();
+    };
+
+} // ast
\ No newline at end of file
diff --git a/nolife/NolifeC++/parser/astexpressionnode.cpp b/nolife/NolifeC++/parser/astexpressionnode.cpp
index e1023af..1370a90 100644
--- a/nolife/NolifeC++/parser/astexpressionnode.cpp
+++ b/nolife/NolifeC++/parser/astexpressionnode.cpp
@@ -13,24 +13,32 @@ namespace ast {
     Expression::Expression(Variable *var) 
     : mOperation { Operation::Noop }
     {
+        mKind = "expression";
+        
         addChild(var);
     }
 
     Expression::Expression(Symbol *sym) 
     : mOperation { Operation::Noop }
     {
+        mKind = "expression";
+        
         addChild(sym);
     }
 
     Expression::Expression(Call *call) 
     : mOperation { Operation::Noop }
     {
+        mKind = "expression";
+        
         addChild(call);
     }
 
     Expression::Expression(Constant *constant) 
     : mOperation { Operation::Noop }
     {
+        mKind = "expression";
+        
         addChild(constant);
     }
 
diff --git a/nolife/NolifeC++/parser/astreturnnode.cpp b/nolife/NolifeC++/parser/astreturnnode.cpp
index f052fc1..d8d800a 100644
--- a/nolife/NolifeC++/parser/astreturnnode.cpp
+++ b/nolife/NolifeC++/parser/astreturnnode.cpp
@@ -5,6 +5,8 @@
 namespace ast {
 
     Return::Return(Expression* e) {
+        mKind = "return";
+        
         addChild(e);
     }
 
diff --git a/nolife/NolifeC++/parser/astreturnnode.hpp b/nolife/NolifeC++/parser/astreturnnode.hpp
index f429840..a19652d 100644
--- a/nolife/NolifeC++/parser/astreturnnode.hpp
+++ b/nolife/NolifeC++/parser/astreturnnode.hpp
@@ -1,11 +1,11 @@
 #pragma once
 
-#include "astnode.hpp"
+#include "aststmtnode.hpp"
 #include "astexpressionnode.hpp"
 
 namespace ast {
 
-    class Return : public Base {
+    class Return : public Statement {
         public:
             Return(Expression* e);
     };
diff --git a/nolife/NolifeC++/parser/asttypenode.cpp b/nolife/NolifeC++/parser/asttypenode.cpp
index a44f458..55b3a16 100644
--- a/nolife/NolifeC++/parser/asttypenode.cpp
+++ b/nolife/NolifeC++/parser/asttypenode.cpp
@@ -6,6 +6,14 @@ namespace ast {
         mKind = "type";
     }
 
+    void Type::setSymbol(Symbol* s) {
+        Base::addChild(s);
+    }
+
+    void Type::setFunc(Procedure* p) {
+        Base::addChild(p);
+    }
+
     Integer::Integer() {
         mKind = "integer";
     }
diff --git a/nolife/NolifeC++/parser/asttypenode.hpp b/nolife/NolifeC++/parser/asttypenode.hpp
index 6a7cd7a..0e25152 100644
--- a/nolife/NolifeC++/parser/asttypenode.hpp
+++ b/nolife/NolifeC++/parser/asttypenode.hpp
@@ -1,6 +1,8 @@
 #pragma once
 
 #include "astnode.hpp"
+#include "astsymnode.hpp"
+#include "astprocnode.hpp"
 
 namespace ast {
 
@@ -17,6 +19,9 @@ namespace ast {
             Type();
             virtual Types getType() = 0;
             virtual Type* clone() = 0;
+            void setSymbol(Symbol* s);
+            void setFunc(Procedure* p);
+            // void addChild() = delete;
     };
 
     class Integer : public Type {
diff --git a/nolife/NolifeC++/parser/nolife_parser.cpp b/nolife/NolifeC++/parser/nolife_parser.cpp
index 9b1b339..f22a6c7 100644
--- a/nolife/NolifeC++/parser/nolife_parser.cpp
+++ b/nolife/NolifeC++/parser/nolife_parser.cpp
@@ -539,15 +539,15 @@ static const yytype_uint8 yytranslate[] =
 static const yytype_uint16 yyrline[] =
 {
        0,   178,   178,   192,   197,   202,   209,   222,   236,   250,
-     257,   263,   268,   272,   276,   280,   285,   289,   291,   295,
-     303,   313,   331,   348,   352,   367,   371,   376,   382,   385,
-     389,   393,   395,   397,   401,   403,   407,   411,   415,   422,
-     424,   428,   432,   436,   450,   452,   454,   458,   475,   485,
-     493,   498,   500,   504,   506,   510,   514,   516,   520,   529,
-     537,   541,   547,   556,   560,   567,   571,   578,   582,   589,
-     593,   597,   601,   605,   610,   614,   619,   623,   628,   632,
-     637,   641,   645,   649,   653,   657,   662,   666,   671,   676,
-     680,   685,   690,   694,   699,   704,   708,   712
+     257,   263,   268,   273,   277,   281,   286,   290,   292,   296,
+     304,   314,   332,   349,   353,   368,   372,   377,   383,   386,
+     390,   394,   396,   398,   402,   404,   408,   412,   416,   423,
+     425,   429,   433,   437,   451,   453,   455,   459,   476,   486,
+     494,   499,   501,   505,   507,   511,   515,   517,   521,   530,
+     538,   542,   548,   557,   561,   568,   572,   579,   583,   590,
+     594,   598,   602,   606,   611,   615,   620,   624,   629,   633,
+     638,   642,   646,   650,   654,   658,   663,   667,   672,   677,
+     681,   686,   691,   695,   700,   705,   709,   713
 };
 #endif
 
@@ -1542,7 +1542,7 @@ yyreduce:
 #line 236 "nolife_parser.y" /* yacc.c:1646  */
     { 
     // returns typeList (std::vector<ast::Type*>*)
-    std::cout << "decl_list (recursive)\n";
+    std::cout << "decl_list (recursive, )\n";
     for (auto sym : *(yyvsp[-3].symbList)) { // for each symbol node in the identifier_list
         auto newType = (yyvsp[-1].type)->clone();
         newType->addChild(sym);
@@ -1591,58 +1591,59 @@ yyreduce:
   case 12:
 #line 268 "nolife_parser.y" /* yacc.c:1646  */
     { 
-    std::cout << "type\n";
+    std::cout << "type (array)\n";
+    // $$ = $1;
 }
-#line 1597 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1598 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 13:
-#line 272 "nolife_parser.y" /* yacc.c:1646  */
+#line 273 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "standard_type\n";
     (yyval.type) = new ast::Integer();
 }
-#line 1606 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1607 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 14:
-#line 276 "nolife_parser.y" /* yacc.c:1646  */
+#line 277 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "standard_type\n";
     (yyval.type) = new ast::Float();
 }
-#line 1615 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1616 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 15:
-#line 280 "nolife_parser.y" /* yacc.c:1646  */
+#line 281 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "standard_type\n";
     (yyval.type) = new ast::Character();
 }
-#line 1624 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1625 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 16:
-#line 286 "nolife_parser.y" /* yacc.c:1646  */
+#line 287 "nolife_parser.y" /* yacc.c:1646  */
     { std::cout << "array_type\n";}
-#line 1630 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1631 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 17:
-#line 290 "nolife_parser.y" /* yacc.c:1646  */
+#line 291 "nolife_parser.y" /* yacc.c:1646  */
     { std::cout << "dim\n";}
-#line 1636 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1637 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 18:
-#line 292 "nolife_parser.y" /* yacc.c:1646  */
+#line 293 "nolife_parser.y" /* yacc.c:1646  */
     { std::cout << "dim\n";}
-#line 1642 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1643 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 19:
-#line 295 "nolife_parser.y" /* yacc.c:1646  */
+#line 296 "nolife_parser.y" /* yacc.c:1646  */
     { 
     // returns a declaration (ast::Declaration)
     std::cout << "subprogram_decls\n";
@@ -1651,11 +1652,11 @@ yyreduce:
 
     (yyval.declaration) = (yyvsp[-2].declaration);
 }
-#line 1655 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1656 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 20:
-#line 303 "nolife_parser.y" /* yacc.c:1646  */
+#line 304 "nolife_parser.y" /* yacc.c:1646  */
     { 
     // returns a declaration (ast::Declaration)
     std::cout << "subprogram_decls\n";
@@ -1665,11 +1666,11 @@ yyreduce:
 
     (yyval.declaration) = declNode;
 }
-#line 1669 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1670 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 21:
-#line 313 "nolife_parser.y" /* yacc.c:1646  */
+#line 314 "nolife_parser.y" /* yacc.c:1646  */
     { 
     // returns a type node (ast::Type)
     std::cout << "subprogram_decl\n";
@@ -1688,11 +1689,11 @@ yyreduce:
 
     (yyval.type) = (yyvsp[-2].type);
 }
-#line 1692 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1693 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 22:
-#line 331 "nolife_parser.y" /* yacc.c:1646  */
+#line 332 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "subprogram_decl\n";
 
@@ -1709,20 +1710,20 @@ yyreduce:
 
     (yyval.type) = (yyvsp[-1].type);
 }
-#line 1713 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1714 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 23:
-#line 348 "nolife_parser.y" /* yacc.c:1646  */
+#line 349 "nolife_parser.y" /* yacc.c:1646  */
     { 
     // returns a type node (ast::Type) that points to a func/proceedure
     std::cout << "subprogram_head\n";
 }
-#line 1722 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1723 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 24:
-#line 352 "nolife_parser.y" /* yacc.c:1646  */
+#line 353 "nolife_parser.y" /* yacc.c:1646  */
     {
     // returns a type node (ast::Type) that points to a func/proceedure
     std::cout << "subprogram_head\n";
@@ -1734,153 +1735,153 @@ yyreduce:
         nullptr // no compound statement available yet
     );
 
-    (yyvsp[-1].type)->addChild(func);
+    (yyvsp[-1].type)->setFunc(func);
 
     (yyval.type) = (yyvsp[-1].type);
 }
-#line 1742 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1743 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 25:
-#line 367 "nolife_parser.y" /* yacc.c:1646  */
+#line 368 "nolife_parser.y" /* yacc.c:1646  */
     {
     // returns a type node (ast::Type) that points to a func/proceedure
     std::cout << "subprogram_head\n";
 }
-#line 1751 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1752 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 26:
-#line 371 "nolife_parser.y" /* yacc.c:1646  */
+#line 372 "nolife_parser.y" /* yacc.c:1646  */
     {
     // returns a type node (ast::Type) that points to a func/proceedure
     std::cout << "subprogram_head\n";
 }
-#line 1760 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1761 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 27:
-#line 376 "nolife_parser.y" /* yacc.c:1646  */
+#line 377 "nolife_parser.y" /* yacc.c:1646  */
     { 
     // returns a parameter node (ast::Parameters)
     std::cout << "arguments\n";
     // $$ = $2;
 }
-#line 1770 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1771 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 28:
-#line 384 "nolife_parser.y" /* yacc.c:1646  */
+#line 385 "nolife_parser.y" /* yacc.c:1646  */
     { std::cout << "parameter_list\n";}
-#line 1776 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1777 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 29:
-#line 386 "nolife_parser.y" /* yacc.c:1646  */
+#line 387 "nolife_parser.y" /* yacc.c:1646  */
     { std::cout << "parameter_list\n";}
-#line 1782 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1783 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 30:
-#line 389 "nolife_parser.y" /* yacc.c:1646  */
+#line 390 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "stmt (assignment)\n";
     (yyval.statement) = (yyvsp[0].assignment);
 }
-#line 1791 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1792 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 31:
-#line 394 "nolife_parser.y" /* yacc.c:1646  */
+#line 395 "nolife_parser.y" /* yacc.c:1646  */
     { std::cout << "stmt\n";}
-#line 1797 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1798 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 32:
-#line 396 "nolife_parser.y" /* yacc.c:1646  */
+#line 397 "nolife_parser.y" /* yacc.c:1646  */
     { std::cout << "stmt\n";}
-#line 1803 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1804 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 33:
-#line 397 "nolife_parser.y" /* yacc.c:1646  */
+#line 398 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "stmt (proc invoke)\n";
     // $$ = $1;
 }
-#line 1812 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1813 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 34:
-#line 402 "nolife_parser.y" /* yacc.c:1646  */
+#line 403 "nolife_parser.y" /* yacc.c:1646  */
     { std::cout << "stmt\n";}
-#line 1818 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1819 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 35:
-#line 403 "nolife_parser.y" /* yacc.c:1646  */
+#line 404 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "stmt (compound_stmt)\n";
     (yyval.statement) = (yyvsp[0].compoundstatement);
 }
-#line 1827 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1828 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 36:
-#line 407 "nolife_parser.y" /* yacc.c:1646  */
+#line 408 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "stmt (return)\n";
-    // $$ = $1;
+    (yyval.statement) = (yyvsp[0].rtrn);
 }
-#line 1836 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1837 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 37:
-#line 412 "nolife_parser.y" /* yacc.c:1646  */
+#line 413 "nolife_parser.y" /* yacc.c:1646  */
     { std::cout << "stmt\n";}
-#line 1842 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1843 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 38:
-#line 415 "nolife_parser.y" /* yacc.c:1646  */
+#line 416 "nolife_parser.y" /* yacc.c:1646  */
     { 
     // returns assignment (ast::Assignement)
     std::cout << "assignment\n";
 
     (yyval.assignment) = new ast::Assignment((yyvsp[-2].variable), (yyvsp[0].expression));
 }
-#line 1853 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1854 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 39:
-#line 423 "nolife_parser.y" /* yacc.c:1646  */
+#line 424 "nolife_parser.y" /* yacc.c:1646  */
     { std::cout << "if_stmt\n";}
-#line 1859 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1860 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 40:
-#line 425 "nolife_parser.y" /* yacc.c:1646  */
+#line 426 "nolife_parser.y" /* yacc.c:1646  */
     { std::cout << "if_stmt\n";}
-#line 1865 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1866 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 41:
-#line 429 "nolife_parser.y" /* yacc.c:1646  */
+#line 430 "nolife_parser.y" /* yacc.c:1646  */
     { std::cout << "while_stmt\n";}
-#line 1871 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1872 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 42:
-#line 432 "nolife_parser.y" /* yacc.c:1646  */
+#line 433 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "procedure_invocation\n";
     (yyval.call) = new ast::Call((yyvsp[-2].symbol));
 }
-#line 1880 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1881 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 43:
-#line 436 "nolife_parser.y" /* yacc.c:1646  */
+#line 437 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "procedure_invocation\n";
     
@@ -1894,29 +1895,29 @@ yyreduce:
 
     (yyval.call) = callNode;
 }
-#line 1898 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1899 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 44:
-#line 451 "nolife_parser.y" /* yacc.c:1646  */
+#line 452 "nolife_parser.y" /* yacc.c:1646  */
     { std::cout << "io_stmt\n";}
-#line 1904 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1905 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 45:
-#line 453 "nolife_parser.y" /* yacc.c:1646  */
+#line 454 "nolife_parser.y" /* yacc.c:1646  */
     { std::cout << "io_stmt\n";}
-#line 1910 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1911 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 46:
-#line 455 "nolife_parser.y" /* yacc.c:1646  */
+#line 456 "nolife_parser.y" /* yacc.c:1646  */
     { std::cout << "io_stmt\n";}
-#line 1916 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1917 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 47:
-#line 458 "nolife_parser.y" /* yacc.c:1646  */
+#line 459 "nolife_parser.y" /* yacc.c:1646  */
     { 
     // returns a compoundstatement (ast::CompoundStatement)
     std::cout << "compound_stmt\n";
@@ -1933,11 +1934,11 @@ yyreduce:
 
     (yyval.compoundstatement) = compoundstmt;
 }
-#line 1937 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1938 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 48:
-#line 475 "nolife_parser.y" /* yacc.c:1646  */
+#line 476 "nolife_parser.y" /* yacc.c:1646  */
     { 
     // returns a stmtList (std::vector<ast::Statement>*)
     std::cout << "stmt_list (single)\n";
@@ -1948,11 +1949,11 @@ yyreduce:
 
     (yyval.stmtList) = list;
 }
-#line 1952 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1953 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 49:
-#line 485 "nolife_parser.y" /* yacc.c:1646  */
+#line 486 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "stmt_list (recursive)\n";
 
@@ -1960,62 +1961,62 @@ yyreduce:
 
     (yyval.stmtList) = (yyvsp[-2].stmtList);
 }
-#line 1964 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1965 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 50:
-#line 493 "nolife_parser.y" /* yacc.c:1646  */
+#line 494 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "return_stmt\n";
     (yyval.rtrn) = new ast::Return((yyvsp[0].expression));
 }
-#line 1973 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1974 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 51:
-#line 499 "nolife_parser.y" /* yacc.c:1646  */
+#line 500 "nolife_parser.y" /* yacc.c:1646  */
     { std::cout << "case_stmt";}
-#line 1979 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1980 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 52:
-#line 501 "nolife_parser.y" /* yacc.c:1646  */
+#line 502 "nolife_parser.y" /* yacc.c:1646  */
     { std::cout << "case_stmt";}
-#line 1985 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1986 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 53:
-#line 505 "nolife_parser.y" /* yacc.c:1646  */
+#line 506 "nolife_parser.y" /* yacc.c:1646  */
     { std::cout << "cases\n";}
-#line 1991 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1992 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 54:
-#line 507 "nolife_parser.y" /* yacc.c:1646  */
+#line 508 "nolife_parser.y" /* yacc.c:1646  */
     { std::cout << "cases\n";}
-#line 1997 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 1998 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 55:
-#line 511 "nolife_parser.y" /* yacc.c:1646  */
+#line 512 "nolife_parser.y" /* yacc.c:1646  */
     {std::cout << "case_element\n";}
-#line 2003 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2004 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 56:
-#line 515 "nolife_parser.y" /* yacc.c:1646  */
+#line 516 "nolife_parser.y" /* yacc.c:1646  */
     {std::cout << "case_element\n";}
-#line 2009 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2010 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 57:
-#line 517 "nolife_parser.y" /* yacc.c:1646  */
+#line 518 "nolife_parser.y" /* yacc.c:1646  */
     {std::cout << "case_element\n";}
-#line 2015 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2016 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 58:
-#line 520 "nolife_parser.y" /* yacc.c:1646  */
+#line 521 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "expr_list (single)\n";
 
@@ -2025,11 +2026,11 @@ yyreduce:
 
     (yyval.exprList) = list;
 }
-#line 2029 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2030 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 59:
-#line 529 "nolife_parser.y" /* yacc.c:1646  */
+#line 530 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "expr_list (recursive)\n";
 
@@ -2037,351 +2038,351 @@ yyreduce:
 
     (yyval.exprList) = (yyvsp[-2].exprList);
 }
-#line 2041 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2042 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 60:
-#line 537 "nolife_parser.y" /* yacc.c:1646  */
+#line 538 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "expr\n";
     (yyval.expression) = (yyvsp[0].expression);
 }
-#line 2050 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2051 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 61:
-#line 541 "nolife_parser.y" /* yacc.c:1646  */
+#line 542 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "expr\n";
     (yyvsp[-1].expression)->addChild((yyvsp[-2].expression));
     (yyvsp[-1].expression)->addChild((yyvsp[0].expression));
     (yyval.expression) = (yyvsp[-1].expression);
 }
-#line 2061 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2062 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 62:
-#line 547 "nolife_parser.y" /* yacc.c:1646  */
+#line 548 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "expr\n";
     auto exprNode = new ast::Expression(ast::Expression::Operation::Not);
     exprNode->addChild((yyvsp[0].expression));
     (yyval.expression) = exprNode;
 }
-#line 2072 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2073 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 63:
-#line 556 "nolife_parser.y" /* yacc.c:1646  */
+#line 557 "nolife_parser.y" /* yacc.c:1646  */
     {
     std::cout << "rel_expr\n";
     (yyval.expression) = (yyvsp[0].expression);
 }
-#line 2081 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2082 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 64:
-#line 560 "nolife_parser.y" /* yacc.c:1646  */
+#line 561 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "rel_expr\n";
     (yyvsp[-1].expression)->addChild((yyvsp[-2].expression));
     (yyvsp[-1].expression)->addChild((yyvsp[0].expression));
     (yyval.expression) = (yyvsp[-1].expression);
 }
-#line 2092 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2093 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 65:
-#line 567 "nolife_parser.y" /* yacc.c:1646  */
+#line 568 "nolife_parser.y" /* yacc.c:1646  */
     {
     std::cout << "add_expr\n";
     (yyval.expression) = (yyvsp[0].expression);
 }
-#line 2101 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2102 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 66:
-#line 571 "nolife_parser.y" /* yacc.c:1646  */
+#line 572 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "add_expr\n";
     (yyvsp[-1].expression)->addChild((yyvsp[-2].expression));
     (yyvsp[-1].expression)->addChild((yyvsp[0].expression));
     (yyval.expression) = (yyvsp[-1].expression);
 }
-#line 2112 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2113 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 67:
-#line 578 "nolife_parser.y" /* yacc.c:1646  */
+#line 579 "nolife_parser.y" /* yacc.c:1646  */
     {
     std::cout << "mul_expr\n";
     (yyval.expression) = (yyvsp[0].expression);
 }
-#line 2121 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2122 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 68:
-#line 582 "nolife_parser.y" /* yacc.c:1646  */
+#line 583 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "mul_expr\n";
     (yyvsp[-1].expression)->addChild((yyvsp[-2].expression));
     (yyvsp[-1].expression)->addChild((yyvsp[0].expression));
     (yyval.expression) = (yyvsp[-1].expression);
 }
-#line 2132 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2133 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 69:
-#line 589 "nolife_parser.y" /* yacc.c:1646  */
+#line 590 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "factor\n";
     (yyval.expression) = new ast::Expression((yyvsp[0].variable));
 }
-#line 2141 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2142 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 70:
-#line 593 "nolife_parser.y" /* yacc.c:1646  */
+#line 594 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "factor\n";
     (yyval.expression) = new ast::Expression((yyvsp[0].constant));
 }
-#line 2150 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2151 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 71:
-#line 597 "nolife_parser.y" /* yacc.c:1646  */
+#line 598 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "factor\n";
     (yyval.expression) = new ast::Expression((yyvsp[0].constant));
 }
-#line 2159 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2160 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 72:
-#line 601 "nolife_parser.y" /* yacc.c:1646  */
+#line 602 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "factor\n";
     (yyval.expression) = (yyvsp[-1].expression);
 }
-#line 2168 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2169 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 73:
-#line 605 "nolife_parser.y" /* yacc.c:1646  */
+#line 606 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "factor\n";
     (yyval.expression) = new ast::Expression((yyvsp[0].call));
 }
-#line 2177 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2178 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 74:
-#line 610 "nolife_parser.y" /* yacc.c:1646  */
+#line 611 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "variable\n";
     (yyval.variable) = new ast::Variable((yyvsp[0].symbol));
 }
-#line 2186 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2187 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 75:
-#line 614 "nolife_parser.y" /* yacc.c:1646  */
+#line 615 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "variable\n";
     (yyval.variable) = new ast::ArrayAccess((yyvsp[-3].symbol), (yyvsp[-1].expression));
 }
-#line 2195 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2196 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 76:
-#line 619 "nolife_parser.y" /* yacc.c:1646  */
+#line 620 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "addop\n";
     (yyval.expression) = new ast::Expression(ast::Expression::Operation::Plus);
 }
-#line 2204 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2205 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 77:
-#line 623 "nolife_parser.y" /* yacc.c:1646  */
+#line 624 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "addop\n";
     (yyval.expression) = new ast::Expression(ast::Expression::Operation::Minus);
 }
-#line 2213 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2214 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 78:
-#line 628 "nolife_parser.y" /* yacc.c:1646  */
+#line 629 "nolife_parser.y" /* yacc.c:1646  */
     {
     std::cout << "mulop\n";
     (yyval.expression) = new ast::Expression(ast::Expression::Operation::Multiply);
 }
-#line 2222 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2223 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 79:
-#line 632 "nolife_parser.y" /* yacc.c:1646  */
+#line 633 "nolife_parser.y" /* yacc.c:1646  */
     {
     std::cout << "mulop\n";
     (yyval.expression) = new ast::Expression(ast::Expression::Operation::Modulo);
 }
-#line 2231 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2232 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 80:
-#line 637 "nolife_parser.y" /* yacc.c:1646  */
+#line 638 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "relop\n";
     (yyval.expression) = new ast::Expression(ast::Expression::Operation::LessThanOrEqual);
 }
-#line 2240 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2241 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 81:
-#line 641 "nolife_parser.y" /* yacc.c:1646  */
+#line 642 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "relop\n";
     (yyval.expression) = new ast::Expression(ast::Expression::Operation::LessThan);
 }
-#line 2249 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2250 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 82:
-#line 645 "nolife_parser.y" /* yacc.c:1646  */
+#line 646 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "relop\n";
     (yyval.expression) = new ast::Expression(ast::Expression::Operation::GreaterThanOrEqual);
 }
-#line 2258 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2259 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 83:
-#line 649 "nolife_parser.y" /* yacc.c:1646  */
+#line 650 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "relop\n";
     (yyval.expression) = new ast::Expression(ast::Expression::Operation::GreaterThan);
 }
-#line 2267 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2268 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 84:
-#line 653 "nolife_parser.y" /* yacc.c:1646  */
+#line 654 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "relop\n";
     (yyval.expression) = new ast::Expression(ast::Expression::Operation::Equals);
 }
-#line 2276 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2277 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 85:
-#line 657 "nolife_parser.y" /* yacc.c:1646  */
+#line 658 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "relop\n";
     (yyval.expression) = new ast::Expression(ast::Expression::Operation::NotEqual);
 }
-#line 2285 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2286 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 86:
-#line 662 "nolife_parser.y" /* yacc.c:1646  */
+#line 663 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "logop\n";
     (yyval.expression) = new ast::Expression(ast::Expression::Operation::And);
 }
-#line 2294 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2295 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 87:
-#line 666 "nolife_parser.y" /* yacc.c:1646  */
+#line 667 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "logop\n";
     (yyval.expression) = new ast::Expression(ast::Expression::Operation::Or);
 }
-#line 2303 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2304 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 88:
-#line 671 "nolife_parser.y" /* yacc.c:1646  */
+#line 672 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "identifier (" << yytext << ") \n";
     (yyval.symbol) = new ast::Symbol(yytext);
 }
-#line 2312 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2313 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 89:
-#line 677 "nolife_parser.y" /* yacc.c:1646  */
+#line 678 "nolife_parser.y" /* yacc.c:1646  */
     { std::cout << "intnum\n";}
-#line 2318 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2319 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 90:
-#line 680 "nolife_parser.y" /* yacc.c:1646  */
+#line 681 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "char_const" << yytext << "\n";
     (yyval.constant) = new ast::Constant(yytext);
 }
-#line 2327 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2328 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 91:
-#line 685 "nolife_parser.y" /* yacc.c:1646  */
+#line 686 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "string_constant" << yytext << "\n";
     (yyval.constant) = new ast::Constant(yytext);
 }
-#line 2336 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2337 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 92:
-#line 690 "nolife_parser.y" /* yacc.c:1646  */
+#line 691 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "constant" << yytext << "\n";
     (yyval.constant) = new ast::Constant(yytext);
 }
-#line 2345 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2346 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 93:
-#line 694 "nolife_parser.y" /* yacc.c:1646  */
+#line 695 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "constant" << yytext << "\n";
     (yyval.constant) = new ast::Constant(yytext);
 }
-#line 2354 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2355 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 94:
-#line 699 "nolife_parser.y" /* yacc.c:1646  */
+#line 700 "nolife_parser.y" /* yacc.c:1646  */
     { 
     std::cout << "id_s\n";
     (yyval.symbol) = (yyvsp[-1].symbol);
 }
-#line 2363 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2364 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 95:
-#line 705 "nolife_parser.y" /* yacc.c:1646  */
+#line 706 "nolife_parser.y" /* yacc.c:1646  */
     { std::cout << "semicln\n";}
-#line 2369 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2370 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 96:
-#line 709 "nolife_parser.y" /* yacc.c:1646  */
+#line 710 "nolife_parser.y" /* yacc.c:1646  */
     { std::cout << "comma\n";}
-#line 2375 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2376 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
   case 97:
-#line 713 "nolife_parser.y" /* yacc.c:1646  */
+#line 714 "nolife_parser.y" /* yacc.c:1646  */
     { std::cout << "colon\n";}
-#line 2381 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2382 "nolife_parser.cpp" /* yacc.c:1646  */
     break;
 
 
-#line 2385 "nolife_parser.cpp" /* yacc.c:1646  */
+#line 2386 "nolife_parser.cpp" /* yacc.c:1646  */
       default: break;
     }
   /* User semantic actions sometimes alter yychar, and that requires
@@ -2609,7 +2610,7 @@ yyreturn:
 #endif
   return yyresult;
 }
-#line 715 "nolife_parser.y" /* yacc.c:1906  */
+#line 716 "nolife_parser.y" /* yacc.c:1906  */
 
 
 /********************C ROUTINES *********************************/
diff --git a/nolife/NolifeC++/parser/nolife_parser.y b/nolife/NolifeC++/parser/nolife_parser.y
index a7f815b..3024e7f 100644
--- a/nolife/NolifeC++/parser/nolife_parser.y
+++ b/nolife/NolifeC++/parser/nolife_parser.y
@@ -235,7 +235,7 @@ decl_list: identifier_list colon  type  semicln {
 }
 | decl_list identifier_list colon type semicln { 
     // returns typeList (std::vector<ast::Type*>*)
-    std::cout << "decl_list (recursive)\n";
+    std::cout << "decl_list (recursive, )\n";
     for (auto sym : *$2) { // for each symbol node in the identifier_list
         auto newType = $4->clone();
         newType->addChild(sym);
@@ -266,7 +266,8 @@ type: standard_type {
     $$ = $1;
 }
 | array_type { 
-    std::cout << "type\n";
+    std::cout << "type (array)\n";
+    // $$ = $1;
 };
 
 standard_type: O_INTEGER { 
@@ -360,7 +361,7 @@ subprogram_head: O_FUNCTION identifier arguments colon standard_type semicln {
         nullptr // no compound statement available yet
     );
 
-    $4->addChild(func);
+    $4->setFunc(func);
 
     $$ = $4;
 }
@@ -406,7 +407,7 @@ stmt: assignment {
 }
 | return_stmt { 
     std::cout << "stmt (return)\n";
-    // $$ = $1;
+    $$ = $1;
 }
 | case_stmt
 { std::cout << "stmt\n";}
