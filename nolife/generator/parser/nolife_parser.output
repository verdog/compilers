Terminals unused in grammar

   O_LBRACE
   O_RBRACE
   O_CONSTANT


Grammar

    0 $accept: program $end

    1 program: O_PROGRAM id_s decls subprogram_decls compound_stmt
    2        | O_PROGRAM id_s decls compound_stmt
    3        | O_PROGRAM id_s subprogram_decls compound_stmt
    4        | O_PROGRAM id_s compound_stmt

    5 decls: O_VAR decl_list

    6 decl_list: identifier_list colon type semicln
    7          | decl_list identifier_list colon type semicln

    8 identifier_list: identifier
    9                | identifier_list comma identifier

   10 type: standard_type
   11     | array_type

   12 standard_type: O_INTEGER
   13              | O_FLOAT
   14              | O_CHARACTER

   15 array_type: O_ARRAY O_LBRACKET dim O_RBRACKET O_OF standard_type

   16 dim: intnum O_DOTDOT intnum
   17    | char_const O_DOTDOT char_const

   18 subprogram_decls: subprogram_decls subprogram_decl semicln
   19                 | subprogram_decl semicln

   20 subprogram_decl: subprogram_head decls compound_stmt
   21                | subprogram_head compound_stmt

   22 subprogram_head: O_FUNCTION identifier arguments colon standard_type semicln
   23                | O_FUNCTION identifier colon standard_type semicln
   24                | O_PROCEDURE identifier arguments semicln
   25                | O_PROCEDURE identifier semicln

   26 arguments: O_LPAREN parameter_list O_RPAREN

   27 parameter_list: identifier_list colon type
   28               | parameter_list semicln identifier_list colon type

   29 stmt: assignment
   30     | if_stmt
   31     | while_stmt
   32     | procedure_invocation
   33     | i_o_stmt
   34     | compound_stmt
   35     | return_stmt
   36     | case_stmt

   37 assignment: variable O_ASSIGN expr

   38 if_stmt: O_IF expr O_THEN stmt O_ELSE stmt
   39        | O_IF expr O_THEN stmt

   40 while_stmt: O_WHILE expr O_DO stmt

   41 procedure_invocation: identifier O_LPAREN O_RPAREN
   42                     | identifier O_LPAREN expr_list O_RPAREN

   43 i_o_stmt: O_READ O_LPAREN variable O_RPAREN
   44         | O_WRITE O_LPAREN expr O_RPAREN
   45         | O_WRITE O_LPAREN string_constant O_RPAREN

   46 compound_stmt: O_BEGIN stmt_list O_END

   47 stmt_list: stmt
   48          | stmt_list semicln stmt

   49 return_stmt: O_RETURN expr

   50 case_stmt: O_CASE expr O_OF cases O_END
   51          | O_CASE expr O_OF O_END

   52 cases: case_element
   53      | cases O_SEMICOLON case_element

   54 case_element: case_labels O_COLON stmt

   55 case_labels: constant
   56            | case_labels O_COMMA constant

   57 expr_list: expr
   58          | expr_list comma expr

   59 expr: rel_expr
   60     | expr logop rel_expr
   61     | O_NOT factor

   62 rel_expr: add_expr
   63         | rel_expr relop add_expr

   64 add_expr: mul_expr
   65         | add_expr addop mul_expr

   66 mul_expr: factor
   67         | mul_expr mulop factor

   68 factor: variable
   69       | constant
   70       | char_const
   71       | O_LPAREN expr O_RPAREN
   72       | procedure_invocation

   73 variable: identifier
   74         | identifier O_LBRACKET expr O_RBRACKET

   75 addop: O_PLUS
   76      | O_MINUS

   77 mulop: O_TIMES
   78      | O_MOD

   79 relop: O_LE
   80      | O_LT
   81      | O_GE
   82      | O_GT
   83      | O_EQ
   84      | O_NE

   85 logop: O_AND
   86      | O_OR

   87 identifier: O_IDENTIFER

   88 intnum: O_INT

   89 char_const: O_CHAR

   90 string_constant: O_STRING

   91 constant: O_FLOATCON
   92         | O_INT

   93 id_s: identifier semicln

   94 semicln: O_SEMICOLON

   95 comma: O_COMMA

   96 colon: O_COLON


Terminals, with rules where they appear

$end (0) 0
O_AND (1) 85
O_ARRAY (2) 15
O_BEGIN (3) 46
O_CHARACTER (5) 14
O_DO (6) 40
O_ELSE (7) 38
O_END (8) 46 50 51
O_FLOAT (9) 13
O_FUNCTION (10) 22 23
O_IF (11) 38 39
O_INTEGER (12) 12
O_NOT (13) 61
O_OF (14) 15 50 51
O_OR (15) 86
O_PROCEDURE (16) 24 25
O_PROGRAM (17) 1 2 3 4
O_READ (18) 43
O_THEN (19) 38 39
O_VAR (20) 5
O_WHILE (21) 40
O_WRITE (22) 44 45
O_LBRACE (23)
O_RBRACE (24)
O_CONSTANT (25)
O_LE (26) 79
O_LT (27) 80
O_GE (28) 81
O_GT (29) 82
O_EQ (30) 83
O_NE (31) 84
O_ASSIGN (32) 37
O_COLON (33) 54 96
O_SEMICOLON (34) 53 94
O_COMMA (35) 56 95
O_LBRACKET (36) 15 74
O_RBRACKET (37) 15 74
O_LPAREN (38) 26 41 42 43 44 45 71
O_RPAREN (39) 26 41 42 43 44 45 71
O_DOTDOT (40) 16 17
O_PLUS (41) 75
O_TIMES (42) 77
O_IDENTIFER (43) 87
O_MOD (44) 78
O_RETURN (45) 49
O_CHAR (46) 89
O_STRING (47) 90
O_INT (48) 88 92
O_FLOATCON (49) 91
O_MINUS (50) 76
O_CASE (51) 50 51
error (256)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program (54)
    on left: 1 2 3 4, on right: 0
decls (55)
    on left: 5, on right: 1 2 20
decl_list (56)
    on left: 6 7, on right: 5 7
identifier_list (57)
    on left: 8 9, on right: 6 7 9 27 28
type (58)
    on left: 10 11, on right: 6 7 27 28
standard_type (59)
    on left: 12 13 14, on right: 10 15 22 23
array_type (60)
    on left: 15, on right: 11
dim (61)
    on left: 16 17, on right: 15
subprogram_decls (62)
    on left: 18 19, on right: 1 3 18
subprogram_decl (63)
    on left: 20 21, on right: 18 19
subprogram_head (64)
    on left: 22 23 24 25, on right: 20 21
arguments (65)
    on left: 26, on right: 22 24
parameter_list (66)
    on left: 27 28, on right: 26 28
stmt (67)
    on left: 29 30 31 32 33 34 35 36, on right: 38 39 40 47 48 54
assignment (68)
    on left: 37, on right: 29
if_stmt (69)
    on left: 38 39, on right: 30
while_stmt (70)
    on left: 40, on right: 31
procedure_invocation (71)
    on left: 41 42, on right: 32 72
i_o_stmt (72)
    on left: 43 44 45, on right: 33
compound_stmt (73)
    on left: 46, on right: 1 2 3 4 20 21 34
stmt_list (74)
    on left: 47 48, on right: 46 48
return_stmt (75)
    on left: 49, on right: 35
case_stmt (76)
    on left: 50 51, on right: 36
cases (77)
    on left: 52 53, on right: 50 53
case_element (78)
    on left: 54, on right: 52 53
case_labels (79)
    on left: 55 56, on right: 54 56
expr_list (80)
    on left: 57 58, on right: 42 58
expr (81)
    on left: 59 60 61, on right: 37 38 39 40 44 49 50 51 57 58 60 71
    74
rel_expr (82)
    on left: 62 63, on right: 59 60 63
add_expr (83)
    on left: 64 65, on right: 62 63 65
mul_expr (84)
    on left: 66 67, on right: 64 65 67
factor (85)
    on left: 68 69 70 71 72, on right: 61 66 67
variable (86)
    on left: 73 74, on right: 37 43 68
addop (87)
    on left: 75 76, on right: 65
mulop (88)
    on left: 77 78, on right: 67
relop (89)
    on left: 79 80 81 82 83 84, on right: 63
logop (90)
    on left: 85 86, on right: 60
identifier (91)
    on left: 87, on right: 8 9 22 23 24 25 41 42 73 74 93
intnum (92)
    on left: 88, on right: 16
char_const (93)
    on left: 89, on right: 17 70
string_constant (94)
    on left: 90, on right: 45
constant (95)
    on left: 91 92, on right: 55 56 69
id_s (96)
    on left: 93, on right: 1 2 3 4
semicln (97)
    on left: 94, on right: 6 7 18 19 22 23 24 25 28 48 93
comma (98)
    on left: 95, on right: 9 58
colon (99)
    on left: 96, on right: 6 7 22 23 27 28


State 0

    0 $accept: . program $end

    O_PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    1 program: O_PROGRAM . id_s decls subprogram_decls compound_stmt
    2        | O_PROGRAM . id_s decls compound_stmt
    3        | O_PROGRAM . id_s subprogram_decls compound_stmt
    4        | O_PROGRAM . id_s compound_stmt

    O_IDENTIFER  shift, and go to state 3

    identifier  go to state 4
    id_s        go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

   87 identifier: O_IDENTIFER .

    $default  reduce using rule 87 (identifier)


State 4

   93 id_s: identifier . semicln

    O_SEMICOLON  shift, and go to state 7

    semicln  go to state 8


State 5

    1 program: O_PROGRAM id_s . decls subprogram_decls compound_stmt
    2        | O_PROGRAM id_s . decls compound_stmt
    3        | O_PROGRAM id_s . subprogram_decls compound_stmt
    4        | O_PROGRAM id_s . compound_stmt

    O_BEGIN      shift, and go to state 9
    O_FUNCTION   shift, and go to state 10
    O_PROCEDURE  shift, and go to state 11
    O_VAR        shift, and go to state 12

    decls             go to state 13
    subprogram_decls  go to state 14
    subprogram_decl   go to state 15
    subprogram_head   go to state 16
    compound_stmt     go to state 17


State 6

    0 $accept: program $end .

    $default  accept


State 7

   94 semicln: O_SEMICOLON .

    $default  reduce using rule 94 (semicln)


State 8

   93 id_s: identifier semicln .

    $default  reduce using rule 93 (id_s)


State 9

   46 compound_stmt: O_BEGIN . stmt_list O_END

    O_BEGIN      shift, and go to state 9
    O_IF         shift, and go to state 18
    O_READ       shift, and go to state 19
    O_WHILE      shift, and go to state 20
    O_WRITE      shift, and go to state 21
    O_IDENTIFER  shift, and go to state 3
    O_RETURN     shift, and go to state 22
    O_CASE       shift, and go to state 23

    stmt                  go to state 24
    assignment            go to state 25
    if_stmt               go to state 26
    while_stmt            go to state 27
    procedure_invocation  go to state 28
    i_o_stmt              go to state 29
    compound_stmt         go to state 30
    stmt_list             go to state 31
    return_stmt           go to state 32
    case_stmt             go to state 33
    variable              go to state 34
    identifier            go to state 35


State 10

   22 subprogram_head: O_FUNCTION . identifier arguments colon standard_type semicln
   23                | O_FUNCTION . identifier colon standard_type semicln

    O_IDENTIFER  shift, and go to state 3

    identifier  go to state 36


State 11

   24 subprogram_head: O_PROCEDURE . identifier arguments semicln
   25                | O_PROCEDURE . identifier semicln

    O_IDENTIFER  shift, and go to state 3

    identifier  go to state 37


State 12

    5 decls: O_VAR . decl_list

    O_IDENTIFER  shift, and go to state 3

    decl_list        go to state 38
    identifier_list  go to state 39
    identifier       go to state 40


State 13

    1 program: O_PROGRAM id_s decls . subprogram_decls compound_stmt
    2        | O_PROGRAM id_s decls . compound_stmt

    O_BEGIN      shift, and go to state 9
    O_FUNCTION   shift, and go to state 10
    O_PROCEDURE  shift, and go to state 11

    subprogram_decls  go to state 41
    subprogram_decl   go to state 15
    subprogram_head   go to state 16
    compound_stmt     go to state 42


State 14

    3 program: O_PROGRAM id_s subprogram_decls . compound_stmt
   18 subprogram_decls: subprogram_decls . subprogram_decl semicln

    O_BEGIN      shift, and go to state 9
    O_FUNCTION   shift, and go to state 10
    O_PROCEDURE  shift, and go to state 11

    subprogram_decl  go to state 43
    subprogram_head  go to state 16
    compound_stmt    go to state 44


State 15

   19 subprogram_decls: subprogram_decl . semicln

    O_SEMICOLON  shift, and go to state 7

    semicln  go to state 45


State 16

   20 subprogram_decl: subprogram_head . decls compound_stmt
   21                | subprogram_head . compound_stmt

    O_BEGIN  shift, and go to state 9
    O_VAR    shift, and go to state 12

    decls          go to state 46
    compound_stmt  go to state 47


State 17

    4 program: O_PROGRAM id_s compound_stmt .

    $default  reduce using rule 4 (program)


State 18

   38 if_stmt: O_IF . expr O_THEN stmt O_ELSE stmt
   39        | O_IF . expr O_THEN stmt

    O_NOT        shift, and go to state 48
    O_LPAREN     shift, and go to state 49
    O_IDENTIFER  shift, and go to state 3
    O_CHAR       shift, and go to state 50
    O_INT        shift, and go to state 51
    O_FLOATCON   shift, and go to state 52

    procedure_invocation  go to state 53
    expr                  go to state 54
    rel_expr              go to state 55
    add_expr              go to state 56
    mul_expr              go to state 57
    factor                go to state 58
    variable              go to state 59
    identifier            go to state 35
    char_const            go to state 60
    constant              go to state 61


State 19

   43 i_o_stmt: O_READ . O_LPAREN variable O_RPAREN

    O_LPAREN  shift, and go to state 62


State 20

   40 while_stmt: O_WHILE . expr O_DO stmt

    O_NOT        shift, and go to state 48
    O_LPAREN     shift, and go to state 49
    O_IDENTIFER  shift, and go to state 3
    O_CHAR       shift, and go to state 50
    O_INT        shift, and go to state 51
    O_FLOATCON   shift, and go to state 52

    procedure_invocation  go to state 53
    expr                  go to state 63
    rel_expr              go to state 55
    add_expr              go to state 56
    mul_expr              go to state 57
    factor                go to state 58
    variable              go to state 59
    identifier            go to state 35
    char_const            go to state 60
    constant              go to state 61


State 21

   44 i_o_stmt: O_WRITE . O_LPAREN expr O_RPAREN
   45         | O_WRITE . O_LPAREN string_constant O_RPAREN

    O_LPAREN  shift, and go to state 64


State 22

   49 return_stmt: O_RETURN . expr

    O_NOT        shift, and go to state 48
    O_LPAREN     shift, and go to state 49
    O_IDENTIFER  shift, and go to state 3
    O_CHAR       shift, and go to state 50
    O_INT        shift, and go to state 51
    O_FLOATCON   shift, and go to state 52

    procedure_invocation  go to state 53
    expr                  go to state 65
    rel_expr              go to state 55
    add_expr              go to state 56
    mul_expr              go to state 57
    factor                go to state 58
    variable              go to state 59
    identifier            go to state 35
    char_const            go to state 60
    constant              go to state 61


State 23

   50 case_stmt: O_CASE . expr O_OF cases O_END
   51          | O_CASE . expr O_OF O_END

    O_NOT        shift, and go to state 48
    O_LPAREN     shift, and go to state 49
    O_IDENTIFER  shift, and go to state 3
    O_CHAR       shift, and go to state 50
    O_INT        shift, and go to state 51
    O_FLOATCON   shift, and go to state 52

    procedure_invocation  go to state 53
    expr                  go to state 66
    rel_expr              go to state 55
    add_expr              go to state 56
    mul_expr              go to state 57
    factor                go to state 58
    variable              go to state 59
    identifier            go to state 35
    char_const            go to state 60
    constant              go to state 61


State 24

   47 stmt_list: stmt .

    $default  reduce using rule 47 (stmt_list)


State 25

   29 stmt: assignment .

    $default  reduce using rule 29 (stmt)


State 26

   30 stmt: if_stmt .

    $default  reduce using rule 30 (stmt)


State 27

   31 stmt: while_stmt .

    $default  reduce using rule 31 (stmt)


State 28

   32 stmt: procedure_invocation .

    $default  reduce using rule 32 (stmt)


State 29

   33 stmt: i_o_stmt .

    $default  reduce using rule 33 (stmt)


State 30

   34 stmt: compound_stmt .

    $default  reduce using rule 34 (stmt)


State 31

   46 compound_stmt: O_BEGIN stmt_list . O_END
   48 stmt_list: stmt_list . semicln stmt

    O_END        shift, and go to state 67
    O_SEMICOLON  shift, and go to state 7

    semicln  go to state 68


State 32

   35 stmt: return_stmt .

    $default  reduce using rule 35 (stmt)


State 33

   36 stmt: case_stmt .

    $default  reduce using rule 36 (stmt)


State 34

   37 assignment: variable . O_ASSIGN expr

    O_ASSIGN  shift, and go to state 69


State 35

   41 procedure_invocation: identifier . O_LPAREN O_RPAREN
   42                     | identifier . O_LPAREN expr_list O_RPAREN
   73 variable: identifier .
   74         | identifier . O_LBRACKET expr O_RBRACKET

    O_LBRACKET  shift, and go to state 70
    O_LPAREN    shift, and go to state 71

    $default  reduce using rule 73 (variable)


State 36

   22 subprogram_head: O_FUNCTION identifier . arguments colon standard_type semicln
   23                | O_FUNCTION identifier . colon standard_type semicln

    O_COLON   shift, and go to state 72
    O_LPAREN  shift, and go to state 73

    arguments  go to state 74
    colon      go to state 75


State 37

   24 subprogram_head: O_PROCEDURE identifier . arguments semicln
   25                | O_PROCEDURE identifier . semicln

    O_SEMICOLON  shift, and go to state 7
    O_LPAREN     shift, and go to state 73

    arguments  go to state 76
    semicln    go to state 77


State 38

    5 decls: O_VAR decl_list .
    7 decl_list: decl_list . identifier_list colon type semicln

    O_IDENTIFER  shift, and go to state 3

    $default  reduce using rule 5 (decls)

    identifier_list  go to state 78
    identifier       go to state 40


State 39

    6 decl_list: identifier_list . colon type semicln
    9 identifier_list: identifier_list . comma identifier

    O_COLON  shift, and go to state 72
    O_COMMA  shift, and go to state 79

    comma  go to state 80
    colon  go to state 81


State 40

    8 identifier_list: identifier .

    $default  reduce using rule 8 (identifier_list)


State 41

    1 program: O_PROGRAM id_s decls subprogram_decls . compound_stmt
   18 subprogram_decls: subprogram_decls . subprogram_decl semicln

    O_BEGIN      shift, and go to state 9
    O_FUNCTION   shift, and go to state 10
    O_PROCEDURE  shift, and go to state 11

    subprogram_decl  go to state 43
    subprogram_head  go to state 16
    compound_stmt    go to state 82


State 42

    2 program: O_PROGRAM id_s decls compound_stmt .

    $default  reduce using rule 2 (program)


State 43

   18 subprogram_decls: subprogram_decls subprogram_decl . semicln

    O_SEMICOLON  shift, and go to state 7

    semicln  go to state 83


State 44

    3 program: O_PROGRAM id_s subprogram_decls compound_stmt .

    $default  reduce using rule 3 (program)


State 45

   19 subprogram_decls: subprogram_decl semicln .

    $default  reduce using rule 19 (subprogram_decls)


State 46

   20 subprogram_decl: subprogram_head decls . compound_stmt

    O_BEGIN  shift, and go to state 9

    compound_stmt  go to state 84


State 47

   21 subprogram_decl: subprogram_head compound_stmt .

    $default  reduce using rule 21 (subprogram_decl)


State 48

   61 expr: O_NOT . factor

    O_LPAREN     shift, and go to state 49
    O_IDENTIFER  shift, and go to state 3
    O_CHAR       shift, and go to state 50
    O_INT        shift, and go to state 51
    O_FLOATCON   shift, and go to state 52

    procedure_invocation  go to state 53
    factor                go to state 85
    variable              go to state 59
    identifier            go to state 35
    char_const            go to state 60
    constant              go to state 61


State 49

   71 factor: O_LPAREN . expr O_RPAREN

    O_NOT        shift, and go to state 48
    O_LPAREN     shift, and go to state 49
    O_IDENTIFER  shift, and go to state 3
    O_CHAR       shift, and go to state 50
    O_INT        shift, and go to state 51
    O_FLOATCON   shift, and go to state 52

    procedure_invocation  go to state 53
    expr                  go to state 86
    rel_expr              go to state 55
    add_expr              go to state 56
    mul_expr              go to state 57
    factor                go to state 58
    variable              go to state 59
    identifier            go to state 35
    char_const            go to state 60
    constant              go to state 61


State 50

   89 char_const: O_CHAR .

    $default  reduce using rule 89 (char_const)


State 51

   92 constant: O_INT .

    $default  reduce using rule 92 (constant)


State 52

   91 constant: O_FLOATCON .

    $default  reduce using rule 91 (constant)


State 53

   72 factor: procedure_invocation .

    $default  reduce using rule 72 (factor)


State 54

   38 if_stmt: O_IF expr . O_THEN stmt O_ELSE stmt
   39        | O_IF expr . O_THEN stmt
   60 expr: expr . logop rel_expr

    O_AND   shift, and go to state 87
    O_OR    shift, and go to state 88
    O_THEN  shift, and go to state 89

    logop  go to state 90


State 55

   59 expr: rel_expr .
   63 rel_expr: rel_expr . relop add_expr

    O_LE  shift, and go to state 91
    O_LT  shift, and go to state 92
    O_GE  shift, and go to state 93
    O_GT  shift, and go to state 94
    O_EQ  shift, and go to state 95
    O_NE  shift, and go to state 96

    $default  reduce using rule 59 (expr)

    relop  go to state 97


State 56

   62 rel_expr: add_expr .
   65 add_expr: add_expr . addop mul_expr

    O_PLUS   shift, and go to state 98
    O_MINUS  shift, and go to state 99

    $default  reduce using rule 62 (rel_expr)

    addop  go to state 100


State 57

   64 add_expr: mul_expr .
   67 mul_expr: mul_expr . mulop factor

    O_TIMES  shift, and go to state 101
    O_MOD    shift, and go to state 102

    $default  reduce using rule 64 (add_expr)

    mulop  go to state 103


State 58

   66 mul_expr: factor .

    $default  reduce using rule 66 (mul_expr)


State 59

   68 factor: variable .

    $default  reduce using rule 68 (factor)


State 60

   70 factor: char_const .

    $default  reduce using rule 70 (factor)


State 61

   69 factor: constant .

    $default  reduce using rule 69 (factor)


State 62

   43 i_o_stmt: O_READ O_LPAREN . variable O_RPAREN

    O_IDENTIFER  shift, and go to state 3

    variable    go to state 104
    identifier  go to state 105


State 63

   40 while_stmt: O_WHILE expr . O_DO stmt
   60 expr: expr . logop rel_expr

    O_AND  shift, and go to state 87
    O_DO   shift, and go to state 106
    O_OR   shift, and go to state 88

    logop  go to state 90


State 64

   44 i_o_stmt: O_WRITE O_LPAREN . expr O_RPAREN
   45         | O_WRITE O_LPAREN . string_constant O_RPAREN

    O_NOT        shift, and go to state 48
    O_LPAREN     shift, and go to state 49
    O_IDENTIFER  shift, and go to state 3
    O_CHAR       shift, and go to state 50
    O_STRING     shift, and go to state 107
    O_INT        shift, and go to state 51
    O_FLOATCON   shift, and go to state 52

    procedure_invocation  go to state 53
    expr                  go to state 108
    rel_expr              go to state 55
    add_expr              go to state 56
    mul_expr              go to state 57
    factor                go to state 58
    variable              go to state 59
    identifier            go to state 35
    char_const            go to state 60
    string_constant       go to state 109
    constant              go to state 61


State 65

   49 return_stmt: O_RETURN expr .
   60 expr: expr . logop rel_expr

    O_AND  shift, and go to state 87
    O_OR   shift, and go to state 88

    $default  reduce using rule 49 (return_stmt)

    logop  go to state 90


State 66

   50 case_stmt: O_CASE expr . O_OF cases O_END
   51          | O_CASE expr . O_OF O_END
   60 expr: expr . logop rel_expr

    O_AND  shift, and go to state 87
    O_OF   shift, and go to state 110
    O_OR   shift, and go to state 88

    logop  go to state 90


State 67

   46 compound_stmt: O_BEGIN stmt_list O_END .

    $default  reduce using rule 46 (compound_stmt)


State 68

   48 stmt_list: stmt_list semicln . stmt

    O_BEGIN      shift, and go to state 9
    O_IF         shift, and go to state 18
    O_READ       shift, and go to state 19
    O_WHILE      shift, and go to state 20
    O_WRITE      shift, and go to state 21
    O_IDENTIFER  shift, and go to state 3
    O_RETURN     shift, and go to state 22
    O_CASE       shift, and go to state 23

    stmt                  go to state 111
    assignment            go to state 25
    if_stmt               go to state 26
    while_stmt            go to state 27
    procedure_invocation  go to state 28
    i_o_stmt              go to state 29
    compound_stmt         go to state 30
    return_stmt           go to state 32
    case_stmt             go to state 33
    variable              go to state 34
    identifier            go to state 35


State 69

   37 assignment: variable O_ASSIGN . expr

    O_NOT        shift, and go to state 48
    O_LPAREN     shift, and go to state 49
    O_IDENTIFER  shift, and go to state 3
    O_CHAR       shift, and go to state 50
    O_INT        shift, and go to state 51
    O_FLOATCON   shift, and go to state 52

    procedure_invocation  go to state 53
    expr                  go to state 112
    rel_expr              go to state 55
    add_expr              go to state 56
    mul_expr              go to state 57
    factor                go to state 58
    variable              go to state 59
    identifier            go to state 35
    char_const            go to state 60
    constant              go to state 61


State 70

   74 variable: identifier O_LBRACKET . expr O_RBRACKET

    O_NOT        shift, and go to state 48
    O_LPAREN     shift, and go to state 49
    O_IDENTIFER  shift, and go to state 3
    O_CHAR       shift, and go to state 50
    O_INT        shift, and go to state 51
    O_FLOATCON   shift, and go to state 52

    procedure_invocation  go to state 53
    expr                  go to state 113
    rel_expr              go to state 55
    add_expr              go to state 56
    mul_expr              go to state 57
    factor                go to state 58
    variable              go to state 59
    identifier            go to state 35
    char_const            go to state 60
    constant              go to state 61


State 71

   41 procedure_invocation: identifier O_LPAREN . O_RPAREN
   42                     | identifier O_LPAREN . expr_list O_RPAREN

    O_NOT        shift, and go to state 48
    O_LPAREN     shift, and go to state 49
    O_RPAREN     shift, and go to state 114
    O_IDENTIFER  shift, and go to state 3
    O_CHAR       shift, and go to state 50
    O_INT        shift, and go to state 51
    O_FLOATCON   shift, and go to state 52

    procedure_invocation  go to state 53
    expr_list             go to state 115
    expr                  go to state 116
    rel_expr              go to state 55
    add_expr              go to state 56
    mul_expr              go to state 57
    factor                go to state 58
    variable              go to state 59
    identifier            go to state 35
    char_const            go to state 60
    constant              go to state 61


State 72

   96 colon: O_COLON .

    $default  reduce using rule 96 (colon)


State 73

   26 arguments: O_LPAREN . parameter_list O_RPAREN

    O_IDENTIFER  shift, and go to state 3

    identifier_list  go to state 117
    parameter_list   go to state 118
    identifier       go to state 40


State 74

   22 subprogram_head: O_FUNCTION identifier arguments . colon standard_type semicln

    O_COLON  shift, and go to state 72

    colon  go to state 119


State 75

   23 subprogram_head: O_FUNCTION identifier colon . standard_type semicln

    O_CHARACTER  shift, and go to state 120
    O_FLOAT      shift, and go to state 121
    O_INTEGER    shift, and go to state 122

    standard_type  go to state 123


State 76

   24 subprogram_head: O_PROCEDURE identifier arguments . semicln

    O_SEMICOLON  shift, and go to state 7

    semicln  go to state 124


State 77

   25 subprogram_head: O_PROCEDURE identifier semicln .

    $default  reduce using rule 25 (subprogram_head)


State 78

    7 decl_list: decl_list identifier_list . colon type semicln
    9 identifier_list: identifier_list . comma identifier

    O_COLON  shift, and go to state 72
    O_COMMA  shift, and go to state 79

    comma  go to state 80
    colon  go to state 125


State 79

   95 comma: O_COMMA .

    $default  reduce using rule 95 (comma)


State 80

    9 identifier_list: identifier_list comma . identifier

    O_IDENTIFER  shift, and go to state 3

    identifier  go to state 126


State 81

    6 decl_list: identifier_list colon . type semicln

    O_ARRAY      shift, and go to state 127
    O_CHARACTER  shift, and go to state 120
    O_FLOAT      shift, and go to state 121
    O_INTEGER    shift, and go to state 122

    type           go to state 128
    standard_type  go to state 129
    array_type     go to state 130


State 82

    1 program: O_PROGRAM id_s decls subprogram_decls compound_stmt .

    $default  reduce using rule 1 (program)


State 83

   18 subprogram_decls: subprogram_decls subprogram_decl semicln .

    $default  reduce using rule 18 (subprogram_decls)


State 84

   20 subprogram_decl: subprogram_head decls compound_stmt .

    $default  reduce using rule 20 (subprogram_decl)


State 85

   61 expr: O_NOT factor .

    $default  reduce using rule 61 (expr)


State 86

   60 expr: expr . logop rel_expr
   71 factor: O_LPAREN expr . O_RPAREN

    O_AND     shift, and go to state 87
    O_OR      shift, and go to state 88
    O_RPAREN  shift, and go to state 131

    logop  go to state 90


State 87

   85 logop: O_AND .

    $default  reduce using rule 85 (logop)


State 88

   86 logop: O_OR .

    $default  reduce using rule 86 (logop)


State 89

   38 if_stmt: O_IF expr O_THEN . stmt O_ELSE stmt
   39        | O_IF expr O_THEN . stmt

    O_BEGIN      shift, and go to state 9
    O_IF         shift, and go to state 18
    O_READ       shift, and go to state 19
    O_WHILE      shift, and go to state 20
    O_WRITE      shift, and go to state 21
    O_IDENTIFER  shift, and go to state 3
    O_RETURN     shift, and go to state 22
    O_CASE       shift, and go to state 23

    stmt                  go to state 132
    assignment            go to state 25
    if_stmt               go to state 26
    while_stmt            go to state 27
    procedure_invocation  go to state 28
    i_o_stmt              go to state 29
    compound_stmt         go to state 30
    return_stmt           go to state 32
    case_stmt             go to state 33
    variable              go to state 34
    identifier            go to state 35


State 90

   60 expr: expr logop . rel_expr

    O_LPAREN     shift, and go to state 49
    O_IDENTIFER  shift, and go to state 3
    O_CHAR       shift, and go to state 50
    O_INT        shift, and go to state 51
    O_FLOATCON   shift, and go to state 52

    procedure_invocation  go to state 53
    rel_expr              go to state 133
    add_expr              go to state 56
    mul_expr              go to state 57
    factor                go to state 58
    variable              go to state 59
    identifier            go to state 35
    char_const            go to state 60
    constant              go to state 61


State 91

   79 relop: O_LE .

    $default  reduce using rule 79 (relop)


State 92

   80 relop: O_LT .

    $default  reduce using rule 80 (relop)


State 93

   81 relop: O_GE .

    $default  reduce using rule 81 (relop)


State 94

   82 relop: O_GT .

    $default  reduce using rule 82 (relop)


State 95

   83 relop: O_EQ .

    $default  reduce using rule 83 (relop)


State 96

   84 relop: O_NE .

    $default  reduce using rule 84 (relop)


State 97

   63 rel_expr: rel_expr relop . add_expr

    O_LPAREN     shift, and go to state 49
    O_IDENTIFER  shift, and go to state 3
    O_CHAR       shift, and go to state 50
    O_INT        shift, and go to state 51
    O_FLOATCON   shift, and go to state 52

    procedure_invocation  go to state 53
    add_expr              go to state 134
    mul_expr              go to state 57
    factor                go to state 58
    variable              go to state 59
    identifier            go to state 35
    char_const            go to state 60
    constant              go to state 61


State 98

   75 addop: O_PLUS .

    $default  reduce using rule 75 (addop)


State 99

   76 addop: O_MINUS .

    $default  reduce using rule 76 (addop)


State 100

   65 add_expr: add_expr addop . mul_expr

    O_LPAREN     shift, and go to state 49
    O_IDENTIFER  shift, and go to state 3
    O_CHAR       shift, and go to state 50
    O_INT        shift, and go to state 51
    O_FLOATCON   shift, and go to state 52

    procedure_invocation  go to state 53
    mul_expr              go to state 135
    factor                go to state 58
    variable              go to state 59
    identifier            go to state 35
    char_const            go to state 60
    constant              go to state 61


State 101

   77 mulop: O_TIMES .

    $default  reduce using rule 77 (mulop)


State 102

   78 mulop: O_MOD .

    $default  reduce using rule 78 (mulop)


State 103

   67 mul_expr: mul_expr mulop . factor

    O_LPAREN     shift, and go to state 49
    O_IDENTIFER  shift, and go to state 3
    O_CHAR       shift, and go to state 50
    O_INT        shift, and go to state 51
    O_FLOATCON   shift, and go to state 52

    procedure_invocation  go to state 53
    factor                go to state 136
    variable              go to state 59
    identifier            go to state 35
    char_const            go to state 60
    constant              go to state 61


State 104

   43 i_o_stmt: O_READ O_LPAREN variable . O_RPAREN

    O_RPAREN  shift, and go to state 137


State 105

   73 variable: identifier .
   74         | identifier . O_LBRACKET expr O_RBRACKET

    O_LBRACKET  shift, and go to state 70

    $default  reduce using rule 73 (variable)


State 106

   40 while_stmt: O_WHILE expr O_DO . stmt

    O_BEGIN      shift, and go to state 9
    O_IF         shift, and go to state 18
    O_READ       shift, and go to state 19
    O_WHILE      shift, and go to state 20
    O_WRITE      shift, and go to state 21
    O_IDENTIFER  shift, and go to state 3
    O_RETURN     shift, and go to state 22
    O_CASE       shift, and go to state 23

    stmt                  go to state 138
    assignment            go to state 25
    if_stmt               go to state 26
    while_stmt            go to state 27
    procedure_invocation  go to state 28
    i_o_stmt              go to state 29
    compound_stmt         go to state 30
    return_stmt           go to state 32
    case_stmt             go to state 33
    variable              go to state 34
    identifier            go to state 35


State 107

   90 string_constant: O_STRING .

    $default  reduce using rule 90 (string_constant)


State 108

   44 i_o_stmt: O_WRITE O_LPAREN expr . O_RPAREN
   60 expr: expr . logop rel_expr

    O_AND     shift, and go to state 87
    O_OR      shift, and go to state 88
    O_RPAREN  shift, and go to state 139

    logop  go to state 90


State 109

   45 i_o_stmt: O_WRITE O_LPAREN string_constant . O_RPAREN

    O_RPAREN  shift, and go to state 140


State 110

   50 case_stmt: O_CASE expr O_OF . cases O_END
   51          | O_CASE expr O_OF . O_END

    O_END       shift, and go to state 141
    O_INT       shift, and go to state 51
    O_FLOATCON  shift, and go to state 52

    cases         go to state 142
    case_element  go to state 143
    case_labels   go to state 144
    constant      go to state 145


State 111

   48 stmt_list: stmt_list semicln stmt .

    $default  reduce using rule 48 (stmt_list)


State 112

   37 assignment: variable O_ASSIGN expr .
   60 expr: expr . logop rel_expr

    O_AND  shift, and go to state 87
    O_OR   shift, and go to state 88

    $default  reduce using rule 37 (assignment)

    logop  go to state 90


State 113

   60 expr: expr . logop rel_expr
   74 variable: identifier O_LBRACKET expr . O_RBRACKET

    O_AND       shift, and go to state 87
    O_OR        shift, and go to state 88
    O_RBRACKET  shift, and go to state 146

    logop  go to state 90


State 114

   41 procedure_invocation: identifier O_LPAREN O_RPAREN .

    $default  reduce using rule 41 (procedure_invocation)


State 115

   42 procedure_invocation: identifier O_LPAREN expr_list . O_RPAREN
   58 expr_list: expr_list . comma expr

    O_COMMA   shift, and go to state 79
    O_RPAREN  shift, and go to state 147

    comma  go to state 148


State 116

   57 expr_list: expr .
   60 expr: expr . logop rel_expr

    O_AND  shift, and go to state 87
    O_OR   shift, and go to state 88

    $default  reduce using rule 57 (expr_list)

    logop  go to state 90


State 117

    9 identifier_list: identifier_list . comma identifier
   27 parameter_list: identifier_list . colon type

    O_COLON  shift, and go to state 72
    O_COMMA  shift, and go to state 79

    comma  go to state 80
    colon  go to state 149


State 118

   26 arguments: O_LPAREN parameter_list . O_RPAREN
   28 parameter_list: parameter_list . semicln identifier_list colon type

    O_SEMICOLON  shift, and go to state 7
    O_RPAREN     shift, and go to state 150

    semicln  go to state 151


State 119

   22 subprogram_head: O_FUNCTION identifier arguments colon . standard_type semicln

    O_CHARACTER  shift, and go to state 120
    O_FLOAT      shift, and go to state 121
    O_INTEGER    shift, and go to state 122

    standard_type  go to state 152


State 120

   14 standard_type: O_CHARACTER .

    $default  reduce using rule 14 (standard_type)


State 121

   13 standard_type: O_FLOAT .

    $default  reduce using rule 13 (standard_type)


State 122

   12 standard_type: O_INTEGER .

    $default  reduce using rule 12 (standard_type)


State 123

   23 subprogram_head: O_FUNCTION identifier colon standard_type . semicln

    O_SEMICOLON  shift, and go to state 7

    semicln  go to state 153


State 124

   24 subprogram_head: O_PROCEDURE identifier arguments semicln .

    $default  reduce using rule 24 (subprogram_head)


State 125

    7 decl_list: decl_list identifier_list colon . type semicln

    O_ARRAY      shift, and go to state 127
    O_CHARACTER  shift, and go to state 120
    O_FLOAT      shift, and go to state 121
    O_INTEGER    shift, and go to state 122

    type           go to state 154
    standard_type  go to state 129
    array_type     go to state 130


State 126

    9 identifier_list: identifier_list comma identifier .

    $default  reduce using rule 9 (identifier_list)


State 127

   15 array_type: O_ARRAY . O_LBRACKET dim O_RBRACKET O_OF standard_type

    O_LBRACKET  shift, and go to state 155


State 128

    6 decl_list: identifier_list colon type . semicln

    O_SEMICOLON  shift, and go to state 7

    semicln  go to state 156


State 129

   10 type: standard_type .

    $default  reduce using rule 10 (type)


State 130

   11 type: array_type .

    $default  reduce using rule 11 (type)


State 131

   71 factor: O_LPAREN expr O_RPAREN .

    $default  reduce using rule 71 (factor)


State 132

   38 if_stmt: O_IF expr O_THEN stmt . O_ELSE stmt
   39        | O_IF expr O_THEN stmt .

    O_ELSE  shift, and go to state 157

    $default  reduce using rule 39 (if_stmt)


State 133

   60 expr: expr logop rel_expr .
   63 rel_expr: rel_expr . relop add_expr

    O_LE  shift, and go to state 91
    O_LT  shift, and go to state 92
    O_GE  shift, and go to state 93
    O_GT  shift, and go to state 94
    O_EQ  shift, and go to state 95
    O_NE  shift, and go to state 96

    $default  reduce using rule 60 (expr)

    relop  go to state 97


State 134

   63 rel_expr: rel_expr relop add_expr .
   65 add_expr: add_expr . addop mul_expr

    O_PLUS   shift, and go to state 98
    O_MINUS  shift, and go to state 99

    $default  reduce using rule 63 (rel_expr)

    addop  go to state 100


State 135

   65 add_expr: add_expr addop mul_expr .
   67 mul_expr: mul_expr . mulop factor

    O_TIMES  shift, and go to state 101
    O_MOD    shift, and go to state 102

    $default  reduce using rule 65 (add_expr)

    mulop  go to state 103


State 136

   67 mul_expr: mul_expr mulop factor .

    $default  reduce using rule 67 (mul_expr)


State 137

   43 i_o_stmt: O_READ O_LPAREN variable O_RPAREN .

    $default  reduce using rule 43 (i_o_stmt)


State 138

   40 while_stmt: O_WHILE expr O_DO stmt .

    $default  reduce using rule 40 (while_stmt)


State 139

   44 i_o_stmt: O_WRITE O_LPAREN expr O_RPAREN .

    $default  reduce using rule 44 (i_o_stmt)


State 140

   45 i_o_stmt: O_WRITE O_LPAREN string_constant O_RPAREN .

    $default  reduce using rule 45 (i_o_stmt)


State 141

   51 case_stmt: O_CASE expr O_OF O_END .

    $default  reduce using rule 51 (case_stmt)


State 142

   50 case_stmt: O_CASE expr O_OF cases . O_END
   53 cases: cases . O_SEMICOLON case_element

    O_END        shift, and go to state 158
    O_SEMICOLON  shift, and go to state 159


State 143

   52 cases: case_element .

    $default  reduce using rule 52 (cases)


State 144

   54 case_element: case_labels . O_COLON stmt
   56 case_labels: case_labels . O_COMMA constant

    O_COLON  shift, and go to state 160
    O_COMMA  shift, and go to state 161


State 145

   55 case_labels: constant .

    $default  reduce using rule 55 (case_labels)


State 146

   74 variable: identifier O_LBRACKET expr O_RBRACKET .

    $default  reduce using rule 74 (variable)


State 147

   42 procedure_invocation: identifier O_LPAREN expr_list O_RPAREN .

    $default  reduce using rule 42 (procedure_invocation)


State 148

   58 expr_list: expr_list comma . expr

    O_NOT        shift, and go to state 48
    O_LPAREN     shift, and go to state 49
    O_IDENTIFER  shift, and go to state 3
    O_CHAR       shift, and go to state 50
    O_INT        shift, and go to state 51
    O_FLOATCON   shift, and go to state 52

    procedure_invocation  go to state 53
    expr                  go to state 162
    rel_expr              go to state 55
    add_expr              go to state 56
    mul_expr              go to state 57
    factor                go to state 58
    variable              go to state 59
    identifier            go to state 35
    char_const            go to state 60
    constant              go to state 61


State 149

   27 parameter_list: identifier_list colon . type

    O_ARRAY      shift, and go to state 127
    O_CHARACTER  shift, and go to state 120
    O_FLOAT      shift, and go to state 121
    O_INTEGER    shift, and go to state 122

    type           go to state 163
    standard_type  go to state 129
    array_type     go to state 130


State 150

   26 arguments: O_LPAREN parameter_list O_RPAREN .

    $default  reduce using rule 26 (arguments)


State 151

   28 parameter_list: parameter_list semicln . identifier_list colon type

    O_IDENTIFER  shift, and go to state 3

    identifier_list  go to state 164
    identifier       go to state 40


State 152

   22 subprogram_head: O_FUNCTION identifier arguments colon standard_type . semicln

    O_SEMICOLON  shift, and go to state 7

    semicln  go to state 165


State 153

   23 subprogram_head: O_FUNCTION identifier colon standard_type semicln .

    $default  reduce using rule 23 (subprogram_head)


State 154

    7 decl_list: decl_list identifier_list colon type . semicln

    O_SEMICOLON  shift, and go to state 7

    semicln  go to state 166


State 155

   15 array_type: O_ARRAY O_LBRACKET . dim O_RBRACKET O_OF standard_type

    O_CHAR  shift, and go to state 50
    O_INT   shift, and go to state 167

    dim         go to state 168
    intnum      go to state 169
    char_const  go to state 170


State 156

    6 decl_list: identifier_list colon type semicln .

    $default  reduce using rule 6 (decl_list)


State 157

   38 if_stmt: O_IF expr O_THEN stmt O_ELSE . stmt

    O_BEGIN      shift, and go to state 9
    O_IF         shift, and go to state 18
    O_READ       shift, and go to state 19
    O_WHILE      shift, and go to state 20
    O_WRITE      shift, and go to state 21
    O_IDENTIFER  shift, and go to state 3
    O_RETURN     shift, and go to state 22
    O_CASE       shift, and go to state 23

    stmt                  go to state 171
    assignment            go to state 25
    if_stmt               go to state 26
    while_stmt            go to state 27
    procedure_invocation  go to state 28
    i_o_stmt              go to state 29
    compound_stmt         go to state 30
    return_stmt           go to state 32
    case_stmt             go to state 33
    variable              go to state 34
    identifier            go to state 35


State 158

   50 case_stmt: O_CASE expr O_OF cases O_END .

    $default  reduce using rule 50 (case_stmt)


State 159

   53 cases: cases O_SEMICOLON . case_element

    O_INT       shift, and go to state 51
    O_FLOATCON  shift, and go to state 52

    case_element  go to state 172
    case_labels   go to state 144
    constant      go to state 145


State 160

   54 case_element: case_labels O_COLON . stmt

    O_BEGIN      shift, and go to state 9
    O_IF         shift, and go to state 18
    O_READ       shift, and go to state 19
    O_WHILE      shift, and go to state 20
    O_WRITE      shift, and go to state 21
    O_IDENTIFER  shift, and go to state 3
    O_RETURN     shift, and go to state 22
    O_CASE       shift, and go to state 23

    stmt                  go to state 173
    assignment            go to state 25
    if_stmt               go to state 26
    while_stmt            go to state 27
    procedure_invocation  go to state 28
    i_o_stmt              go to state 29
    compound_stmt         go to state 30
    return_stmt           go to state 32
    case_stmt             go to state 33
    variable              go to state 34
    identifier            go to state 35


State 161

   56 case_labels: case_labels O_COMMA . constant

    O_INT       shift, and go to state 51
    O_FLOATCON  shift, and go to state 52

    constant  go to state 174


State 162

   58 expr_list: expr_list comma expr .
   60 expr: expr . logop rel_expr

    O_AND  shift, and go to state 87
    O_OR   shift, and go to state 88

    $default  reduce using rule 58 (expr_list)

    logop  go to state 90


State 163

   27 parameter_list: identifier_list colon type .

    $default  reduce using rule 27 (parameter_list)


State 164

    9 identifier_list: identifier_list . comma identifier
   28 parameter_list: parameter_list semicln identifier_list . colon type

    O_COLON  shift, and go to state 72
    O_COMMA  shift, and go to state 79

    comma  go to state 80
    colon  go to state 175


State 165

   22 subprogram_head: O_FUNCTION identifier arguments colon standard_type semicln .

    $default  reduce using rule 22 (subprogram_head)


State 166

    7 decl_list: decl_list identifier_list colon type semicln .

    $default  reduce using rule 7 (decl_list)


State 167

   88 intnum: O_INT .

    $default  reduce using rule 88 (intnum)


State 168

   15 array_type: O_ARRAY O_LBRACKET dim . O_RBRACKET O_OF standard_type

    O_RBRACKET  shift, and go to state 176


State 169

   16 dim: intnum . O_DOTDOT intnum

    O_DOTDOT  shift, and go to state 177


State 170

   17 dim: char_const . O_DOTDOT char_const

    O_DOTDOT  shift, and go to state 178


State 171

   38 if_stmt: O_IF expr O_THEN stmt O_ELSE stmt .

    $default  reduce using rule 38 (if_stmt)


State 172

   53 cases: cases O_SEMICOLON case_element .

    $default  reduce using rule 53 (cases)


State 173

   54 case_element: case_labels O_COLON stmt .

    $default  reduce using rule 54 (case_element)


State 174

   56 case_labels: case_labels O_COMMA constant .

    $default  reduce using rule 56 (case_labels)


State 175

   28 parameter_list: parameter_list semicln identifier_list colon . type

    O_ARRAY      shift, and go to state 127
    O_CHARACTER  shift, and go to state 120
    O_FLOAT      shift, and go to state 121
    O_INTEGER    shift, and go to state 122

    type           go to state 179
    standard_type  go to state 129
    array_type     go to state 130


State 176

   15 array_type: O_ARRAY O_LBRACKET dim O_RBRACKET . O_OF standard_type

    O_OF  shift, and go to state 180


State 177

   16 dim: intnum O_DOTDOT . intnum

    O_INT  shift, and go to state 167

    intnum  go to state 181


State 178

   17 dim: char_const O_DOTDOT . char_const

    O_CHAR  shift, and go to state 50

    char_const  go to state 182


State 179

   28 parameter_list: parameter_list semicln identifier_list colon type .

    $default  reduce using rule 28 (parameter_list)


State 180

   15 array_type: O_ARRAY O_LBRACKET dim O_RBRACKET O_OF . standard_type

    O_CHARACTER  shift, and go to state 120
    O_FLOAT      shift, and go to state 121
    O_INTEGER    shift, and go to state 122

    standard_type  go to state 183


State 181

   16 dim: intnum O_DOTDOT intnum .

    $default  reduce using rule 16 (dim)


State 182

   17 dim: char_const O_DOTDOT char_const .

    $default  reduce using rule 17 (dim)


State 183

   15 array_type: O_ARRAY O_LBRACKET dim O_RBRACKET O_OF standard_type .

    $default  reduce using rule 15 (array_type)
